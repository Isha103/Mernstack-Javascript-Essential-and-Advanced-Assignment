What is the difference between undefined and null in JavaScript? 

Undefined
- undefined represents an uninitialized or non-existent variable.
- It's the default value of a variable that has been declared but not assigned a value.
- undefined is also returned when trying to access a property or method that doesn't exist.

Example:

let x;
console.log(x); // undefined

let obj = {};
console.log(obj.nonExistentProperty); // undefined


Null
- null represents the intentional absence of any object value.
- It's often used to indicate that a variable or property should have no value.
- null is a value that can be assigned to a variable.

Example:

let x = null;
console.log(x); // null

let obj = { prop: null };
console.log(obj.prop); // null

Key differences
- undefined is typically used by JavaScript itself to indicate an uninitialized or non-existent variable, while null is used by developers to intentionally set a variable to have no value.
- undefined is not the same as null, although both can represent the absence of a value.